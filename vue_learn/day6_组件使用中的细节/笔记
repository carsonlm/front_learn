is:浏览器可能不识别自定义模板
 is=""

在子组件里面data必须是个函数不能是对象<原因是肯能被多次调用，避免多个子组件之间调用相互影响。>

ref:当在标签上时，获取的是dom节点；如果是在自定义组件上，则获取的是整个子组件的内容，即子组件的引用
   this.$refs.name

父子组件间的传递方式：
    父组件通过属性的形式给子组件传数据  :属性名="js"  属性名="字符串"   :属性名="{对象}"
          子组件不可以直接修改父组件传过来的参数，可能对其他期间造成影响<单向数据流的概念>，可以在子组件data里面赋值给一个新属性

    子向父：
       this.$emit向外触发事件

props:{
    content:{
          type:string,   //type: [string,number]
          required:true,
          default:'default value',
          validator: function(value){
                 return (value.length>5);//满足则为true，
          }
    }
}

props 特性
    不会把属性显示在DOM的标签之中

非props特性  即父组件传子组件不接
    子组件无法使用传的内容
    属性值会显示在子组件最外层HTML标签中


自定义事件，与原生事件

---native修饰符
给组件绑定原生事件，只需在@click.native即可



非父子组件间的传值问题；
    1--VueX


    2--发布定义模式 即总线模式/观察者模式


   3 --



插槽--
  <slot>

  作用域插槽














